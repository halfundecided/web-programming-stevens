const express = require("express");
const router = express.Router();
const data = require("../data");
const tasksData = data.tasks;
const commentsData = data.comments;

/**
 * GET /api/tasks
 * Shows a list of tasks
 * By default, it will show the first 20 tasks in the collection.
 * If a querystring variable ?skip=n is provided, you will skip the first n tasks.
 * If a querystring variable ?take=y is provided, it will show y number of results.
 * By default, the route will show up to 20 tasks; at most it will show 100 tasks.
 */
router.get("/", async (req, res) => {});

/**
 * GET /api/tasks/:id
 * Shows the task with the supplied ID
 */
router.get("/:id", async (req, res) => {});

/**
 * POST /api/tasks
 * Creates a task with the supplied detail and returns created object
 * fails request if not all details supplied
 */
router.post("/", async (req, res) => {});

/**
 * Updates the task with the supplied ID and returns the new task object
 * task: PUT calls must provide all details of the new state of the object
 * Note: you cannot manipulate comments in this route
 */
router.put("/:id", async (req, res) => {});

/**
 * Updates the task with the supplied ID and returns the new task object
 * task: PATCH calls only provide deltas of the value to update
 * Note: you cannot manipulate comments in this route
 */
router.patch("/:id", async (req, res) => {});

/**
 * Adds a new comment to the task
 * ids must be generated by the server, and not supplied
 */
router.post("/:id/comments", async (req, res) => {});

/**
 * Deletes the comment with an id of commentId on the task with an id of task Id
 */
router.delete("/:taskId/:commentId", async (req, res) => {});

module.exports = router;
